/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import { IngredientQuantity, IngredientQuantity$ } from "./ingredientquantity";
import * as z from "zod";

/**
 * A response containing the recipe and information about a drink.
 */
export type DrinkRecipeResponse = {
    /**
     * An array of objects representing ingredients and their quantities.
     */
    ingredients?: Array<IngredientQuantity> | undefined;
    /**
     * The recipe for making the drink.
     */
    recipe?: string | undefined;
    /**
     * A URL pointing to an image of the drink.
     */
    photo?: string | undefined;
};

/** @internal */
export namespace DrinkRecipeResponse$ {
    export type Inbound = {
        ingredients?: Array<IngredientQuantity$.Inbound> | undefined;
        recipe?: string | undefined;
        photo?: string | undefined;
    };

    export const inboundSchema: z.ZodType<DrinkRecipeResponse, z.ZodTypeDef, Inbound> = z
        .object({
            ingredients: z.array(IngredientQuantity$.inboundSchema).optional(),
            recipe: z.string().optional(),
            photo: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.ingredients === undefined ? null : { ingredients: v.ingredients }),
                ...(v.recipe === undefined ? null : { recipe: v.recipe }),
                ...(v.photo === undefined ? null : { photo: v.photo }),
            };
        });

    export type Outbound = {
        ingredients?: Array<IngredientQuantity$.Outbound> | undefined;
        recipe?: string | undefined;
        photo?: string | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, DrinkRecipeResponse> = z
        .object({
            ingredients: z.array(IngredientQuantity$.outboundSchema).optional(),
            recipe: z.string().optional(),
            photo: z.string().optional(),
        })
        .transform((v) => {
            return {
                ...(v.ingredients === undefined ? null : { ingredients: v.ingredients }),
                ...(v.recipe === undefined ? null : { recipe: v.recipe }),
                ...(v.photo === undefined ? null : { photo: v.photo }),
            };
        });
}
