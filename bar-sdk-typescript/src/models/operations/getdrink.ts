/*
 * Code generated by Speakeasy (https://speakeasyapi.dev). DO NOT EDIT.
 */

import * as components from "../components";
import * as z from "zod";

export type GetDrinkResponse = {
    httpMeta: components.HTTPMetadata;
    /**
     * Successful response
     */
    drinkRecipeResponse?: components.DrinkRecipeResponse | undefined;
    /**
     * unexpected error
     */
    error?: components.ErrorT | undefined;
};

/** @internal */
export namespace GetDrinkResponse$ {
    export type Inbound = {
        HttpMeta: components.HTTPMetadata$.Inbound;
        DrinkRecipeResponse?: components.DrinkRecipeResponse$.Inbound | undefined;
        error?: components.ErrorT$.Inbound | undefined;
    };

    export const inboundSchema: z.ZodType<GetDrinkResponse, z.ZodTypeDef, Inbound> = z
        .object({
            HttpMeta: components.HTTPMetadata$.inboundSchema,
            DrinkRecipeResponse: components.DrinkRecipeResponse$.inboundSchema.optional(),
            error: components.ErrorT$.inboundSchema.optional(),
        })
        .transform((v) => {
            return {
                httpMeta: v.HttpMeta,
                ...(v.DrinkRecipeResponse === undefined
                    ? null
                    : { drinkRecipeResponse: v.DrinkRecipeResponse }),
                ...(v.error === undefined ? null : { error: v.error }),
            };
        });

    export type Outbound = {
        HttpMeta: components.HTTPMetadata$.Outbound;
        DrinkRecipeResponse?: components.DrinkRecipeResponse$.Outbound | undefined;
        error?: components.ErrorT$.Outbound | undefined;
    };

    export const outboundSchema: z.ZodType<Outbound, z.ZodTypeDef, GetDrinkResponse> = z
        .object({
            httpMeta: components.HTTPMetadata$.outboundSchema,
            drinkRecipeResponse: components.DrinkRecipeResponse$.outboundSchema.optional(),
            error: components.ErrorT$.outboundSchema.optional(),
        })
        .transform((v) => {
            return {
                HttpMeta: v.httpMeta,
                ...(v.drinkRecipeResponse === undefined
                    ? null
                    : { DrinkRecipeResponse: v.drinkRecipeResponse }),
                ...(v.error === undefined ? null : { error: v.error }),
            };
        });
}
